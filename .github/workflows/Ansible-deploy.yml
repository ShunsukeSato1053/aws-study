name: Deploy via Ansible over SSM

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. リポジトリをチェックアウト
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. AWS認証情報を設定
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1

      # 3. Terraformをセットアップ
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      # 4. Terraform Init
      - name: Terraform Init
        run: terraform -chdir=tfpractice init

      # 5. Terraform Apply（毎回EC2を作り直す）
      - name: Terraform Apply (force recreate EC2)
        run: terraform -chdir=tfpractice apply -auto-approve -var="allowedCIDRs=129.227.238.198/32" -replace=aws_instance.test_ec2


      # 6. AWS CLI & Ansible をインストール
      - name: Install AWS CLI & Ansible
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-pip
          pip3 install ansible boto3 botocore awscli
          ansible-galaxy collection install amazon.aws community.aws

      # 7. TerraformのoutputからEC2インスタンスIDを取得
      - name: Get EC2 instance ID from Terraform
        run: |
          INSTANCE_ID=$(terraform -chdir=tfpractice output -raw githubactions_ec2_instance_id)
          echo "INSTANCE_ID=$INSTANCE_ID" >> $GITHUB_ENV

      # 8. Ansibleインベントリを作成
      - name: Create Ansible inventory
        run: |
          echo "[web]" > inventory.ini
          echo "ssm-ec2 ansible_host=${INSTANCE_ID} ansible_connection=community.aws.aws_ssm ansible_region=ap-northeast-1" >> inventory.ini

      # 9. Ansible Playbook 実行
      - name: Run Ansible playbook via SSM
        run: ansible-playbook -i inventory.ini ansible/playbook.yml
