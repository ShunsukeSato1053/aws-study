name: Debug Ansible Environment

on:
  workflow_dispatch:

jobs:
  ansible-debug:
    runs-on: ubuntu-latest
    steps:
      - name: リポジトリをチェックアウト
        uses: actions/checkout@v4

      - name: AWS 認証情報を設定
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1

      - name: AWS CLI & Ansible をインストール
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-pip
          pip3 install ansible boto3 botocore awscli
          ansible-galaxy collection install amazon.aws community.aws --collections-path /home/runner/.ansible/collections
          ansible-galaxy collection list

      - name: ansible.cfg を生成
        run: |
          cat <<'EOF' > ansible.cfg
          [defaults]
          collections_path = /home/runner/.ansible/collections
          host_key_checking = False
          retry_files_enabled = False
          interpreter_python = auto_silent
          EOF

      - name: 作成した ansible.cfg 内容確認
        run: cat ansible.cfg

      - name: Ansible と環境情報を詳細に確認
        run: |
          echo "=== ansible-playbook 実行場所 ==="
          which ansible-playbook

          echo "=== ansible バージョン ==="
          ansible --version

          echo "=== pip3 バージョン ==="
          pip3 --version

          echo "=== pip3 でインストールされた amazon.aws コレクション情報 ==="
          pip3 show amazon.aws || echo "amazon.aws は pip3 に見つかりません"

          echo "=== ansible-galaxy collection list ==="
          ansible-galaxy collection list

          echo "=== PYTHONPATH 環境変数 ==="
          echo "$PYTHONPATH" || echo "PYTHONPATH は設定されていません"

          echo "=== pip3 でインストールされた ansible 情報 ==="
          pip3 show ansible || echo "ansible は pip3 に見つかりません"

          echo "=== python 実行場所 ==="
          which python3

          echo "=== python のパスにある ansible パッケージの場所 ==="
          python3 -c "import ansible; print(ansible.__file__)"

      - name: SSM コネクションプラグインが存在するか確認
        run: ansible-doc -t connection amazon.aws.aws_ssm || echo "SSM connection plugin not found"

      - name: ダミーのインベントリ作成
        run: |
          echo "[web]" > inventory.ini
          echo "ssm-ec2 ansible_host=i-0123456789abcdef0 ansible_connection=amazon.aws.aws_ssm ansible_region=ap-northeast-1" >> inventory.ini
          cat inventory.ini

      - name: Ansible Ping テスト（接続はダミーなので失敗は想定内）
        env:
          ANSIBLE_CONFIG: ${{ github.workspace }}/ansible.cfg
          ANSIBLE_COLLECTIONS_PATHS: /home/runner/.ansible/collections
        run: |
          ansible all -i inventory.ini -m ping -vvv || echo "Ping failed (expected if instance is dummy)"
