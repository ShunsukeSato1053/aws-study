name: Deploy via Ansible over SSM (完全再構築)

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. リポジトリをチェックアウト
      - name: リポジトリをチェックアウト
        uses: actions/checkout@v4

      # 2. AWS 認証情報を設定
      - name: AWS 認証情報を設定
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1

      # 3. Terraform セットアップ
      - name: Terraform をセットアップ
        uses: hashicorp/setup-terraform@v3

      # 4. Terraform 初期化
      - name: Terraform Init
        run: terraform -chdir=tfpractice init

      # 5. Terraform Destroy（既存環境削除）
      - name: Terraform Destroy
        run: terraform -chdir=tfpractice destroy -auto-approve -var="allowedCIDRs=129.227.238.198/32" || true

      # 6. Terraform Apply（環境構築）
      - name: Terraform Apply
        run: terraform -chdir=tfpractice apply -auto-approve -var="allowedCIDRs=129.227.238.198/32"

# 7. AWS CLI & Ansible をインストール
      - name: AWS CLI & Ansible をインストール
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-pip
          pip3 install ansible boto3 botocore awscli
          ansible-galaxy collection install amazon.aws community.aws --collections-path /home/runner/.ansible/collections
          ansible-galaxy collection list

      # 8. ansible.cfg をリポジトリルートに生成（amazon.aws.aws_ssm を有効化）
      - name: ansible.cfg を生成
        run: |
          cat <<'EOF' > ansible.cfg
          [defaults]
          collections_paths = /home/runner/.ansible/collections
          host_key_checking = False
          retry_files_enabled = False
          interpreter_python = auto_silent
          EOF

      # 11. Ansible Playbook を実行
      - name: Ansible Playbook を実行（SSM経由）
        run: |
          ansible-playbook -i inventory.ini ansible/playbook.yml -vvv

      # 12. 確認: SSMコネクションプラグインが存在するか
      - name: 確認SSMコネクションプラグインが存在するか
        run: ansible-doc -t connection amazon.aws.aws_ssm
