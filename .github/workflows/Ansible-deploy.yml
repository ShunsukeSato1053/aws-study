name: Deploy via Ansible over SSM

on:
  workflow_dispatch: # 手動実行トリガー

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. リポジトリをチェックアウト
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. AWS認証情報を設定
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1

      # 3. AWS CLI & Ansible をインストール
      - name: Install AWS CLI & Ansible
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-pip
          pip3 install ansible boto3 botocore awscli
          ansible-galaxy collection install amazon.aws
          ansible-galaxy collection list

      # 4. EC2インスタンスIDを設定（Terraform output で取得した値を直接設定）
      #    ここでは GitHub Secrets に保存しておくのがおすすめ
      - name: Set EC2 instance ID
        run: echo "INSTANCE_ID=${{ secrets.TARGET_EC2_INSTANCE_ID }}" >> $GITHUB_ENV
      
      - name: Debug INSTANCE_ID
        run: echo "INSTANCE_ID=${INSTANCE_ID}"

      # 5. Ansibleインベントリを作成
      - name: Create Ansible inventory
        run: |
          echo "[web]" > inventory.ini
          echo "ssm-ec2 ansible_host=${INSTANCE_ID} ansible_connection=community.aws.aws_ssm ansible_region=ap-northeast-1" > inventory.ini

      # 6. Ansible Playbook 実行
      - name: Run Ansible playbook via SSM
        run: |
          ANSIBLE_COLLECTIONS_PATHS=~/.ansible/collections:/home/runner/.local/lib/python3.12/site-packages/ansible_collections \
          ansible-playbook -i inventory.ini ansible/playbook.yml
