name: Deploy via Ansible over SSH

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: リポジトリをチェックアウト
        uses: actions/checkout@v4

      - name: AWS認証情報を設定
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1

      - name: Terraformセットアップ
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: terraform -chdir=tfpractice init

      # 既存環境削除（あれば）
      - name: Terraform Destroy（既存環境削除）
        run: terraform -chdir=tfpractice destroy -auto-approve -var="allowedCIDRs=0.0.0.0/0" || true

      # 新規環境構築
      - name: Terraform Apply
        run: terraform -chdir=tfpractice apply -auto-approve -var="allowedCIDRs=0.0.0.0/0"

      # SSH秘密鍵を配置
      - name: SSH秘密鍵を配置
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa_githubactions
          chmod 600 ~/.ssh/id_rsa_githubactions
          touch ~/.ssh/known_hosts

      # Ansibleインストール
      - name: Ansibleインストール
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-pip
          pip3 install ansible

      # ansible.cfg 作成
      - name: ansible.cfg 作成
        run: |
          cat <<'EOF' > ansible.cfg
          [defaults]
          host_key_checking = False
          retry_files_enabled = False
          interpreter_python = auto_silent
          EOF

      # インベントリ作成（SSH接続用）
      - name: インベントリ作成
        run: |
          PUBLIC_IP=$(terraform -chdir=tfpractice output -raw githubactions_ec2_public_ip)
          echo "[web]" > inventory.ini
          echo "$PUBLIC_IP ansible_user=ec2-user ansible_connection=ssh ansible_ssh_private_key_file=~/.ssh/id_rsa_githubactions" >> inventory.ini
          cat inventory.ini

      # Ansible Playbook実行
      - name: Ansible Playbook実行
        env:
          ANSIBLE_CONFIG: ${{ github.workspace }}/ansible.cfg
        run: ansible-playbook -i inventory.ini ansible/playbook.yml -vvv

      # 後片付け（環境削除）
      - name: Terraform Destroy（後片付け）
        if: failure()
        run: terraform -chdir=tfpractice destroy -auto-approve -var="allowedCIDRs=0.0.0.0/0"
